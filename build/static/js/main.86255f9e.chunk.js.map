{"version":3,"sources":["components/Die.js","components/Dice.js","components/RuleRow.js","components/Rules.js","components/ScoreTable.js","components/Game.js","components/App.js","index.js"],"names":["numberWords","Die","_ref","locked","handleClick","val","idx","disabled","rolling","classes","concat","react_default","a","createElement","className","onClick","event","Dice","dice","map","d","components_Die","key","RuleRow","doScore","name","score","description","undefined","Rule","params","Object","classCallCheck","this","assign","reduce","prev","curr","freqs","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","set","get","err","return","Array","from","values","filter","length","TotalOneNumber","evalRoll","_this","count","SumDistro","_this2","freq","some","c","sum","FullHouse","_this3","includes","SmallStraight","Set","has","_this4","LargeStraight","size","_this5","Yahtzee","_this6","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","cellSpacing","components_RuleRow","evt","totalScore","getTotalScore","NUM_DICE","NUM_ROLLS","Game","_useState","useState","fill","rollsLeft","_useState2","slicedToArray","gameState","setGameState","roll","gs","_objectSpread","i","Math","ceil","random","components_Dice","toConsumableArray","slice","every","x","setTimeout","components_ScoreTable","ruleName","ruleFn","defineProperty","App","components_Game","rootElement","document","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.86255f9e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Die.scss';\n\nconst numberWords = ['one', 'two', 'three', 'four', 'five', 'six'];\n\nfunction Die({ locked, handleClick, val, idx, disabled, rolling }) {\n  const handleClicked = event => {\n    handleClick(idx);\n  };\n\n  let classes = `Die fas fa-dice-${numberWords[val - 1]} fa-5x`;\n  if (locked) classes += ' Die-locked';\n  if (rolling) classes += ' Die-rolling';\n\n  return <i className={classes} onClick={handleClicked} disabled={disabled} />;\n}\n\nexport default Die;\n","import React from 'react';\nimport Die from './Die';\n\nimport './Dice.scss';\n\nfunction Dice({ dice, handleClick, locked, disabled, rolling }) {\n  return (\n    <div className='Dice'>\n      {dice.map((d, idx) => (\n        <Die\n          handleClick={handleClick}\n          val={d}\n          locked={locked[idx]}\n          idx={idx}\n          key={idx}\n          disabled={disabled}\n          rolling={rolling && !locked[idx]}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Dice;\n","import React from 'react';\nimport './RuleRow.scss';\n\nfunction RuleRow({ doScore, name, score, description }) {\n  const disabled = score !== undefined;\n\n  return (\n    <tr\n      className={`RuleRow RuleRow-${disabled ? 'disabled' : 'active'}`}\n      onClick={disabled ? null : doScore}\n    >\n      <td className='RuleRow-name'>{name}</td>\n      <td className='RuleRow-score'>{disabled ? score : description}</td>\n    </tr>\n  );\n}\n\nexport default RuleRow;\n","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n  constructor(params) {\n    // put all properties in params on instance\n    Object.assign(this, params);\n  }\n\n  sum(dice) {\n    // sum of all dice\n    return dice.reduce((prev, curr) => prev + curr);\n  }\n\n  freq(dice) {\n    // frequencies of dice values\n    const freqs = new Map();\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n    return Array.from(freqs.values());\n  }\n\n  count(dice, val) {\n    // # times val appears in dice\n    return dice.filter(d => d === val).length;\n  }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n  evalRoll = dice => {\n    return this.val * this.count(dice, this.val);\n  };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n  evalRoll = dice => {\n    // do any of the counts meet of exceed this distro?\n    return this.freq(dice).some(c => c >= this.count) ? this.sum(dice) : 0;\n  };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) */\n\nclass FullHouse extends Rule {\n  evalRoll = dice => {\n    const freqs = this.freq(dice);\n    return freqs.includes(2) && freqs.includes(3) ? this.score : 0;\n  };\n}\n\n/** Check for small straights. */\n\nclass SmallStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n    // straight can be 234 + either 1 or 5\n    if (\n      (d.has(2) && d.has(3) && d.has(4) && d.has(5) && d.has(2)) ||\n      d.has(5)\n    ) {\n      return this.score;\n    }\n\n    // or 345 + either 2 or 6\n    if ((d.has(3) && d.has(4) && d.has(5) && d.has(2)) || d.has(6)) {\n      return this.score;\n    }\n\n    return 0;\n  };\n}\n\n/** Check for large straights. */\n\nclass LargeStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n\n    // large straight must be 5 different dice & only one can be a 1 or a 6\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n  };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n  evalRoll = dice => {\n    // all dice must be the same\n    return this.freq(dice)[0] === 5 ? this.score : 0;\n  };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1, description: '1 point per 1' });\nconst twos = new TotalOneNumber({ val: 2, description: '2 points per 2' });\nconst threes = new TotalOneNumber({ val: 3, description: '3 points per 3' });\nconst fours = new TotalOneNumber({ val: 4, description: '4 points per 4' });\nconst fives = new TotalOneNumber({ val: 5, description: '6 points per 5' });\nconst sixes = new TotalOneNumber({ val: 6, description: '6 points per 6' });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({\n  count: 3,\n  description: 'Sum all dice if 3 are the same'\n});\nconst fourOfKind = new SumDistro({\n  count: 4,\n  description: 'Sum all dice if 4 are the same'\n});\n\n// full house scores as flat 25\nconst fullHouse = new FullHouse({\n  score: 25,\n  description: '25 points for full house'\n});\n\n// small/large straights score as 30/40\nconst smallStraight = new SmallStraight({\n  score: 30,\n  description: '30 points for small straight'\n});\nconst largeStraight = new LargeStraight({\n  score: 40,\n  description: '40 points for large straight'\n});\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({\n  score: 50,\n  description: '30 points for yahtzee'\n});\n\n// for chance, can view as some of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0, description: 'Sum of all dice' });\n\nexport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n};\n","import React from 'react';\nimport RuleRow from './RuleRow';\nimport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n} from './Rules';\n\nimport './ScoreTable.scss';\n\nfunction ScoreTable({ scores, doScore }) {\n  function getTotalScore() {\n    let totalScore = 0;\n    for (let key in scores) {\n      if (scores[key]) totalScore += scores[key];\n    }\n\n    return totalScore;\n  }\n\n  return (\n    <div className='ScoreTable'>\n      <section className='section'>\n        <h2>Upper</h2>\n        <table cellSpacing='0'>\n          <tbody>\n            <RuleRow\n              name='Ones'\n              score={scores.ones}\n              description={ones.description}\n              doScore={evt => doScore('ones', ones.evalRoll)}\n            />\n            <RuleRow\n              name='Twos'\n              score={scores.twos}\n              description={twos.description}\n              doScore={evt => doScore('twos', twos.evalRoll)}\n            />\n            <RuleRow\n              name='Threes'\n              score={scores.threes}\n              description={threes.description}\n              doScore={evt => doScore('threes', threes.evalRoll)}\n            />\n            <RuleRow\n              name='Fours'\n              score={scores.fours}\n              description={fours.description}\n              doScore={evt => doScore('fours', fours.evalRoll)}\n            />\n            <RuleRow\n              name='Fives'\n              score={scores.fives}\n              description={fives.description}\n              doScore={evt => doScore('fives', fives.evalRoll)}\n            />\n            <RuleRow\n              name='Sixes'\n              score={scores.sixes}\n              description={sixes.description}\n              doScore={evt => doScore('sixes', sixes.evalRoll)}\n            />\n          </tbody>\n        </table>\n      </section>\n      <section className='section section-lower'>\n        <h2>Lower</h2>\n        <table cellSpacing='0'>\n          <tbody>\n            <RuleRow\n              name='Three of Kind'\n              score={scores.threeOfKind}\n              description={threeOfKind.description}\n              doScore={evt => doScore('threeOfKind', threeOfKind.evalRoll)}\n            />\n            <RuleRow\n              name='Four of Kind'\n              score={scores.fourOfKind}\n              description={fourOfKind.description}\n              doScore={evt => doScore('fourOfKind', fourOfKind.evalRoll)}\n            />\n            <RuleRow\n              name='Full House'\n              score={scores.fullHouse}\n              description={fullHouse.description}\n              doScore={evt => doScore('fullHouse', fullHouse.evalRoll)}\n            />\n            <RuleRow\n              name='Small Straight'\n              score={scores.smallStraight}\n              description={smallStraight.description}\n              doScore={evt => doScore('smallStraight', smallStraight.evalRoll)}\n            />\n            <RuleRow\n              name='Large Straight'\n              score={scores.largeStraight}\n              description={largeStraight.description}\n              doScore={evt => doScore('largeStraight', largeStraight.evalRoll)}\n            />\n            <RuleRow\n              name='Yahtzee'\n              score={scores.yahtzee}\n              description={yahtzee.description}\n              doScore={evt => doScore('yahtzee', yahtzee.evalRoll)}\n            />\n            <RuleRow\n              name='Chance'\n              score={scores.chance}\n              description={chance.description}\n              doScore={evt => doScore('chance', chance.evalRoll)}\n            />\n          </tbody>\n        </table>\n      </section>\n      <h2>Total Score: {getTotalScore()}</h2>\n    </div>\n  );\n}\n\nexport default ScoreTable;\n","import React, { useState } from 'react';\nimport Dice from './Dice';\n\nimport './Game.scss';\nimport ScoreTable from './ScoreTable';\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nfunction Game() {\n  const [gameState, setGameState] = useState({\n    dice: Array.from({ length: NUM_DICE }),\n    locked: Array(NUM_DICE).fill(false),\n    rollsLeft: NUM_ROLLS,\n    rolling: false,\n    scores: {\n      ones: undefined,\n      twos: undefined,\n      threes: undefined,\n      fours: undefined,\n      fives: undefined,\n      sixes: undefined,\n      threeOfKind: undefined,\n      fourOfKind: undefined,\n      fullHouse: undefined,\n      smallStraight: undefined,\n      largeStraight: undefined,\n      yahtzee: undefined,\n      chance: undefined\n    }\n  });\n\n  function roll(event) {\n    // roll dice whose indexes are in reroll\n    setGameState(gs => ({\n      ...gameState,\n      dice: gs.dice.map((d, i) =>\n        gs.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: gs.rollsLeft > 1 ? gs.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: gs.rollsLeft > 0 ? gs.rollsLeft - 1 : 0,\n      rolling: false\n    }));\n  }\n\n  function animateRoll() {\n    setGameState(() => ({\n      ...gameState,\n      rolling: true\n    }));\n    setTimeout(roll, 1000);\n  }\n\n  function toggleLocked(idx) {\n    // toggle whether idx is in locked or not\n\n    if (gameState.rollsLeft > 0 && !gameState.rolling) {\n      setGameState(gs => ({\n        ...gameState,\n        locked: [\n          ...gs.locked.slice(0, idx),\n          !gs.locked[idx],\n          ...gs.locked.slice(idx + 1)\n        ]\n      }));\n    }\n  }\n\n  function doScore(ruleName, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    setGameState(gs => ({\n      ...gameState,\n      scores: { ...gs.scores, [ruleName]: ruleFn(gameState.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    //animateRoll();\n  }\n\n  function displayRollInfo() {\n    const messages = [\n      '0 Rolls Left',\n      '1 Roll Left',\n      '2 Rolls Left',\n      'Starting Round'\n    ];\n    return messages[gameState.rollsLeft];\n  }\n\n  return (\n    <div className='Game'>\n      <header className='header'>\n        <h1 className='title'>\n          Yahtzee! <i className='fas fa-dice-six'></i>\n        </h1>\n        <section className='dice-section'>\n          <Dice\n            dice={gameState.dice}\n            locked={gameState.locked}\n            handleClick={toggleLocked}\n            disabled={gameState.rollsLeft === 0}\n            rolling={gameState.rolling}\n          />\n          <div className='button-wrapper'>\n            <button\n              disabled={\n                gameState.locked.every(x => x) ||\n                gameState.rollsLeft === 0 ||\n                gameState.rolling\n              }\n              onClick={animateRoll}\n              className='reroll'\n            >\n              {displayRollInfo()}\n            </button>\n          </div>\n        </section>\n      </header>\n      <ScoreTable doScore={doScore} scores={gameState.scores} />\n    </div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}